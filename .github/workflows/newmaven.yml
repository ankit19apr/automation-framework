# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test Automation Workflow

on:
  schedule:
    - cron: 30 03 * * *
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Running Test Automation Framework with Maven
        run: mvn test -X "-Dbrowser=chrome" "-DisLambdaTest=true" "-DisHeadless=false"

      - name: Upload Test logs
        if: always()
        uses: actions/upload-artifact@v4.4.3
        with:
          name: Test logs
          path: logs/

      - name: Upload HTML Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4.4.3
        with:
          name: html-report
          path: report.html

      - name: Test Execution Status
        if: always()
        run: echo "Test Execution Completed"

      - name: Copy report to gh.actions.pages folder
        if: always()
        run: |
          mkdir -p public/extent-reports-githubActions
          cp report.html public/extent-reports-githubActions/
          ls -l public/extent-reports-githubActions

      - name: Deploy to GitHub Actions Pages
        if: always()
        run: |
          # Set up git configuration
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Check if gh-actions-pages branch exists, if not create it
          git fetch
          if git show-ref --verify --quiet refs/heads/gh-actions-pages; then
            echo "Branch gh-actions-pages exists, checking out the branch..."
            git checkout gh-actions-pages
          else
            echo "Branch gh-actions-pages does not exist, creating and checking out a new branch..."
            git checkout --orphan gh-actions-pages
          fi

          # Clone the repository if not already done
          if [ ! -d "gh-actions-pages" ]; then
            echo "Cloning the repository into 'gh-actions-pages' directory..."
            git clone --branch=gh-actions-pages https://${{ secrets.GITHUB_TOKEN }}@github.com/ankit19apr/automation-framework.git gh-actions-pages
          fi
          
          # Create the reports directory and copy the reports
          mkdir -p extent-reports
          cp -R ../public/extent-reports-githubActions/* extent-reports/

          # Commit and push the changes to GitHub Actions Pages
          git add .
          git commit -m "Deploy test reports"
          git push origin gh-actions-pages
